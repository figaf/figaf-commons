plugins {
    id "java-library"
    id 'maven-publish'
}

group = 'com.github.figaf'
version = '1.28'

ext {
    enableSnapshotsForDependencyResolutionAndPublishing = project.findProperty('enableSnapshots') ?: 'false'
    snapshotsRepoUrl = project.findProperty('snapshotsRepoUrl') ?: ''
    snapshotsRepoUsername = project.findProperty('snapshotsRepoUsername') ?: ''
    snapshotsRepoPassword = project.findProperty('snapshotsRepoPassword') ?: ''
}

repositories {
    mavenLocal()
    mavenCentral()
    if (enableSnapshotsForDependencyResolutionAndPublishing == 'true') {
        maven {
            url "$snapshotsRepoUrl/content/groups/public/"
            allowInsecureProtocol true
            credentials {
                username "$snapshotsRepoUsername"
                password "$snapshotsRepoPassword"
            }
        }
    }
}

dependencies {

    compileOnly("org.projectlombok:lombok:1.18.8")
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    api 'org.apache.commons:commons-lang3:3.9'
    api 'org.apache.commons:commons-collections4:4.4'
    api 'commons-io:commons-io:2.5'
    api 'org.apache.httpcomponents:httpclient:4.5.3'
    api 'org.springframework:spring-web:5.1.4.RELEASE'
    api 'org.springframework.security:spring-security-oauth2-client:5.3.5.RELEASE'
    api 'org.json:json:20180813'
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'

    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.bidib.com.github.markusbernhardt:proxy-vole:1.1.0'
    implementation 'com.sap.cloud.security.xsuaa:spring-xsuaa:2.8.0'
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            def snapshotsRepoUrl = "$snapshotsRepoUrl/content/repositories/snapshots"
            url snapshotsRepoUrl
            allowInsecureProtocol true
            credentials {
                username snapshotsRepoUsername
                password snapshotsRepoPassword
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    doFirst {
        if (enableSnapshotsForDependencyResolutionAndPublishing != 'true') {
            throw new GradleException("It's not possible to perform publishing because property 'enableSnapshots' " +
                "is not configured or set to 'false'")
        }
        // Prevent release publishing
        if (!version.endsWith("-SNAPSHOT")) {
            throw new GradleException("Release publishing is not allowed, it's done by JitPack")
        }
    }
}
